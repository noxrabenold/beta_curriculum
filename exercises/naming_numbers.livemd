# Converting Data

## Navigation

[Return Home](../start.livemd)

## Setup

Ensure you run the `ea` command to evaluate all Elixir cells before starting. Alternatively,
you can evaluate the Elixir cells as you read.

```elixir
Mix.install([
  {:kino, github: "livebook-dev/kino", override: true},
  {:kino_lab, "~> 0.1.0-dev", github: "jonatanklosko/kino_lab"},
  {:vega_lite, "~> 0.1.3"},
  {:benchee, "~> 0.1"},
  {:ecto, "~> 3.7"},
  {:math, "~> 0.7.0"},
  {:utils, path: "utils"}
])
```

## Naming Numbers

In the Elixir cell below, create a function `convert_to_named_integer` which accepts a
single digit integer and returns its string representation. So `1` would become `"one"`.

<!-- livebook:{"break_markdown":true} -->

```mermaid
flowchart
   0 --> zero
   1 --> one
   2 --> two
   3 --> three
   4 --> four
   5 --> five
   6 --> six
   7 --> seven
   8 --> eight
   9 --> nine
```

<!-- livebook:{"break_markdown":true} -->

<!-- livebook:{"force_markdown":true} -->

```elixir
convert_to_named_integer.(1)
"one"
```

```elixir
convert_to_named_integer = fn int ->
  cond do
    int == 0 -> "zero"
    int == 1 -> "one"
    int == 2 -> "two"
    int == 3 -> "three"
    int == 4 -> "four"
    int == 5 -> "five"
    int == 6 -> "six"
    int == 7 -> "seven"
    int == 8 -> "eight"
    int == 9 -> "nine"
  end
end

Utils.test(:naming_numbers, convert_to_named_integer)
```

## Numbering Names

In the Elixir cell below, create a function `convert_to_integer` which accepts a
number's name and returns its string representation. So `"one"` would become `1`.

In addition to accepting lowercase name, also accept uppercase names so `"One"` would become `1`.

```mermaid
flowchart
  zero --> 0
  one --> 1
  two --> 2
  three --> 3
  four --> 4
  five --> 5
  six --> 6
  seven --> 7
  eight --> 8
  nine --> 9
```

```mermaid
flowchart
  Zero --> 0
  One --> 1
  Two --> 2
  Three --> 3
  Four --> 4
  Five --> 5
  Six --> 6
  Seven --> 7
  Eight --> 8
  Nine --> 9
```

```elixir
convert_to_integer = fn int ->
  cond do
    int == "Zero" || int == "zero" -> 0
    int == "One" || int == "one" -> 1
    int == "Two" || int == "two" -> 2
    int == "Three" || int == "three" -> 3
    int == "Four" || int == "four" -> 4
    int == "Five" || int == "five" -> 5
    int == "Six" || int == "six" -> 6
    int == "Seven" || int == "seven" -> 7
    int == "Eight" || int == "eight" -> 5
    int == "Nine" || int == "Nine" -> 9
  end
end

convert_to_integer.("two")
```
